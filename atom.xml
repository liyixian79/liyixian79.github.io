<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lyiian</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-19T04:12:30.440Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>lyiian</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>一张图理解js原型和原型链</title>
    <link href="http://yoursite.com/2020/02/19/%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%90%86%E8%A7%A3js%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE/"/>
    <id>http://yoursite.com/2020/02/19/%E4%B8%80%E5%BC%A0%E5%9B%BE%E7%90%86%E8%A7%A3js%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE/</id>
    <published>2020-02-19T04:07:39.997Z</published>
    <updated>2020-02-19T04:12:30.440Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="一张图理解js原型和原型链"><a href="#一张图理解js原型和原型链" class="headerlink" title="一张图理解js原型和原型链"></a>一张图理解js原型和原型链</h2><p>第一个被问到的问题是：你猜Function.<em>proto</em> 是什么？</p><p>于是通过博客中转过的一篇博文和js高程学习了原型链并画了张总图，一图了解全部知识</p><p><a href="https://img-blog.csdnimg.cn/20190411184429102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img-blog.csdnimg.cn/20190411184429102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><p>注意：图中的箭头代表等于。<br>其他基础知识复习部分：<br>A.原型</p><p>1.实例的构造函数属性（constructor）指向构造函数。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">person1.constructor == Person</span><br></pre></td></tr></tbody></table></figure></div><p>2.每个函数对象都有一个prototype 属性，这个属性指向函数的原型对象</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Person.prototype.constructor == Person</span><br></pre></td></tr></tbody></table></figure></div><p>3.每个对象都有 <strong>proto</strong> 属性，但只有函数对象才有 prototype 属性</p><p>4.原型对象（Person.prototype）是 构造函数（Person）的一个实例。</p><p>5.对象 person1 有一个 <strong>proto</strong>属性，创建它的构造函数是 Person，构造函数的原型对象是 Person.prototype ，所以：<br>person1.<strong>proto</strong> == Person.prototype</p><p><a href="https://img-blog.csdnimg.cn/20190411170303907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img-blog.csdnimg.cn/20190411170303907.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><p>6.所有的构造器都来自于Function.prototype，甚至包括根构造器Object及Function自身</p><p>7.Math，JSON是以对象形式存在的，无需new。它们的proto是Object.prototype。 </p><p>检验以上内容：</p><pre><code>person1.__proto__ 是什么？Person.__proto__ 是什么？Person.prototype.__proto__ 是什么？Object.__proto__ 是什么？Object.prototype__proto__ 是什么？</code></pre><p>难点：</p><pre><code>Object.__proto__ === Function.prototype // trueObject 是函数对象，是通过new Function()创建的，所以Object.__proto__指向Function.prototype。（「所有函数对象的__proto__都指向Function.prototype」）Function.__proto__ === Function.prototype // trueFunction 也是对象函数，也是通过new Function()创建，所以Function.__proto__指向Function.prototype。Function.prototype.__proto__ === Object.prototype //true</code></pre><p>至此， 原型链理论学习完毕。</p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;一张图理解js原型和原型链&quot;&gt;&lt;a href=&quot;#一张图理解js原型和原型链&quot; class=&quot;headerlink&quot; title=&quot;一张图理解js原型和原型链&quot;&gt;&lt;/a&gt;一张图理解js原型和原型链&lt;/h2&gt;&lt;p&gt;第
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
    
      <category term="js语法" scheme="http://yoursite.com/tags/js%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>uniapp开发踩坑记录</title>
    <link href="http://yoursite.com/2020/02/19/uniapp%E5%BC%80%E5%8F%91%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/02/19/uniapp%E5%BC%80%E5%8F%91%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</id>
    <published>2020-02-19T04:07:39.981Z</published>
    <updated>2020-02-19T04:13:34.202Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="uniapp开发踩坑记录"><a href="#uniapp开发踩坑记录" class="headerlink" title="uniapp开发踩坑记录"></a>uniapp开发踩坑记录</h2><p>1.重排页面</p><p>此时报以下错误，app端不能运行，但是h5正常显示，配置页面文件app.json 页面注册顺序与相应生成的app端代码页面注册页面中这些页面顺序不同，此时应改为相同。</p><p><a href="C:%5CUsers%5CYY%5CDesktop%5C20190411191315153.jpg" data-fancybox="group" data-caption class="fancybox"><img alt title data-src="C:%5CUsers%5CYY%5CDesktop%5C20190411191315153.jpg" class="lazyload"></a></p><p>2.属性重名</p><p>如出现以下状况，则 css 中某些 class 重复定义，检查代码就可以解决问题。</p><p><a href="https://img-blog.csdnimg.cn/20190411191326568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="https://img-blog.csdnimg.cn/20190411191326568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" class="fancybox"><img alt="https://img-blog.csdnimg.cn/20190411191326568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" title="https://img-blog.csdnimg.cn/20190411191326568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" data-src="https://img-blog.csdnimg.cn/20190411191326568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" class="lazyload"></a></p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;uniapp开发踩坑记录&quot;&gt;&lt;a href=&quot;#uniapp开发踩坑记录&quot; class=&quot;headerlink&quot; title=&quot;uniapp开发踩坑记录&quot;&gt;&lt;/a&gt;uniapp开发踩坑记录&lt;/h2&gt;&lt;p&gt;1.重排页
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="uniapp" scheme="http://yoursite.com/tags/uniapp/"/>
    
  </entry>
  
  <entry>
    <title>vue知识点(二）—— 组件通信</title>
    <link href="http://yoursite.com/2020/02/19/vue%E7%9F%A5%E8%AF%86%E7%82%B9(%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94%20%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/"/>
    <id>http://yoursite.com/2020/02/19/vue%E7%9F%A5%E8%AF%86%E7%82%B9(%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94%20%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/</id>
    <published>2020-02-19T04:07:39.964Z</published>
    <updated>2020-02-19T04:13:46.793Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="vue知识点-二）——-组件通信"><a href="#vue知识点-二）——-组件通信" class="headerlink" title="vue知识点(二）—— 组件通信"></a>vue知识点(二）—— 组件通信</h2><p><strong>vue组件间传值分为以下几种：</strong><br><strong>1.父子组件传值</strong><br><strong>2.兄弟组件传值</strong><br><strong>3.跨多层级组件传值</strong><br><strong>4.任意组件传值</strong></p><p>想起这些实在有些繁琐，于是刚开始开发就走了捷径，选择了vuex进行页面间传值：</p><ol><li><p>搭建vue脚手架，安装vuex依赖</p></li><li><p>项目目录src下新建store目录和store.js文件</p></li></ol><p>通常store对象都包含4个属性：state,getters,actions,mutations。</p><p>state (类似存储全局变量的数据)<br>getters (提供用来获取state数据的方法)<br>actions (提供跟后台接口打交道的方法，并调用mutations提供的方法)<br>mutations (提供存储设置state数据的方法)</p><p>3.在mian.js中导入store.</p><pre><code>import store from './store'Vue.prototype.$store = store//在app绑定组件时绑定storeconst app = new Vue({    store,    ...App})</code></pre><p>4.组件使用：</p><p>A.把vuex引入。</p><pre><code>import {        mapState,        mapMutations    } from 'vuex'//写入对应方法mapState(['forcedLogin', 'token', 'id', 'mcid', 'cid']),...mapMutations(['login', 'settoken', 'setid', 'setmcid', 'setcid']),</code></pre><p>B.使用数据</p><pre><code>console.log(this.id); //调用vuex 中idthis.login(); //调用vuex 中 login 方法</code></pre><p>后来想想，其实有些数据没有必要让所有组件都有修改的权限，同时，变量重名之类的问题层出不穷，熟悉其他方法很有必要。<br><strong>1.父子组件传值</strong></p><p>A.父传子</p><p>在子组件中 prop:[“msg”] 或者 prop{msg:string} 用于接受父组件传过来的值。</p><p>在父组件中使用子组件< child msg=”hello” > 或者动态绑定< child :msg=”hello” ></p><p>B.子传父</p><p>在子组件中设置触发函数，触发函数包含  this.$emit(“tochild”,”hello”)</p><p>在父组件的<child v-on:tochild="tochild">或者<child @tochild="”tochild”"></child></child></p><p>tochild:function(data){</p><p>console.log(data); //hello</p><p>}<br><strong>2.兄弟组件传值</strong></p><p>通过引入同一个new.js进行兄弟间传值</p><p>a页面中：new.$emit(“toB”,”hello”);</p><p>b页面中：new.$on(“toB”,data =>{</p><p>console.log(data);  //hello</p><p>});<br><strong>3.跨多层级组件传值</strong></p><p> Vue 2.2 新增的 API  provide / inject</p><p>在父组件</p><p>provide:{</p><p>data:1</p><p>}</p><p>在子组件</p><p>inject:[“data”]</p><p>在隔许多层的父子组件中都能使用。<br>4.任意组件传值</p><p>除了以上提到的vuex还有eventBus方法可实现任意组件传值</p><p>使用前在全局定义一个eventBus</p><p>window.eventBus = new Vue();</p><p>在某页面：</p><p>eventBus.$emit(“ToOthers”,id);</p><p>在另一个页面：</p><p>eventBus.$on(“ToOthers”,function(val){console.log(val)</p><p>});</p><p>最后一定要关闭eventBus</p><p>eventBus.$off(‘eventBusevent’);</p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;vue知识点-二）——-组件通信&quot;&gt;&lt;a href=&quot;#vue知识点-二）——-组件通信&quot; class=&quot;headerlink&quot; title=&quot;vue知识点(二）—— 组件通信&quot;&gt;&lt;/a&gt;vue知识点(二）—— 组
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue知识点(一）—— 生命周期和钩子函数</title>
    <link href="http://yoursite.com/2020/02/19/vue%E7%9F%A5%E8%AF%86%E7%82%B9(%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%20%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%92%8C%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2020/02/19/vue%E7%9F%A5%E8%AF%86%E7%82%B9(%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94%20%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%92%8C%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0/</id>
    <published>2020-02-19T04:07:39.957Z</published>
    <updated>2020-02-19T04:13:57.181Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="vue知识点-一）——-生命周期和钩子函数"><a href="#vue知识点-一）——-生命周期和钩子函数" class="headerlink" title="vue知识点(一）—— 生命周期和钩子函数"></a>vue知识点(一）—— 生命周期和钩子函数</h2><p>vue刚接触时写了个博客网站放github上，顺便让优秀的学长面试了一波，了解到好多知识漏洞。补当时笔记：<br>A.生命周期和钩子函数</p><p>经典图如下：</p><p><a href="https://img-blog.csdnimg.cn/20190413134954262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img-blog.csdnimg.cn/20190413134954262.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><p>从vue2.0钩子函数回忆：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">html</span>></span><br><span class="line"><span class="tag"><<span class="name">html</span>></span></span><br><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">title</span>></span><span class="tag"><!--<span class="name"-->title</span>></span><br><span class="line">    <span class="tag"><<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/vue/2.1.3/vue.js"</span>></span><span class="tag"><!--<span class="name"-->script</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->head</span>></span><br><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"> </span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>></span></span><br><span class="line">     <span class="tag"><<span class="name">p</span>></span>{{ message }}<span class="tag"><!--<span class="name"-->p</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->div</span>></span><br><span class="line"> </span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>></span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> app = <span class="keyword">new</span> Vue({</span></span><br><span class="line"><span class="actionscript">      el: <span class="string">'#app'</span>,</span></span><br><span class="line">      data: {</span><br><span class="line"><span class="actionscript">          message : <span class="string">"xuxiao is boy"</span> </span></span><br><span class="line">      },</span><br><span class="line"><span class="actionscript">       beforeCreate: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.group(<span class="string">'beforeCreate 创建前状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span> , <span class="string">"el     : "</span> + <span class="keyword">this</span>.$el); <span class="comment">//undefined</span></span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); <span class="comment">//undefined </span></span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"message: "</span> + <span class="keyword">this</span>.message)  </span></span><br><span class="line">        },</span><br><span class="line"><span class="actionscript">        created: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'created 创建完毕状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"el     : "</span> + <span class="keyword">this</span>.$el); <span class="comment">//undefined</span></span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); <span class="comment">//已被初始化 </span></span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"message: "</span> + <span class="keyword">this</span>.message); <span class="comment">//已被初始化</span></span></span><br><span class="line">        },</span><br><span class="line"><span class="actionscript">        beforeMount: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'beforeMount 挂载前状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"el     : "</span> + (<span class="keyword">this</span>.$el)); <span class="comment">//已被初始化</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); <span class="comment">//已被初始化  </span></span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"message: "</span> + <span class="keyword">this</span>.message); <span class="comment">//已被初始化  </span></span></span><br><span class="line">        },</span><br><span class="line"><span class="actionscript">        mounted: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'mounted 挂载结束状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"el     : "</span> + <span class="keyword">this</span>.$el); <span class="comment">//已被初始化</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);    </span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); <span class="comment">//已被初始化</span></span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"message: "</span> + <span class="keyword">this</span>.message); <span class="comment">//已被初始化 </span></span></span><br><span class="line">        },</span><br><span class="line"><span class="actionscript">        beforeUpdate: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'beforeUpdate 更新前状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"el     : "</span> + <span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);   </span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); </span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"message: "</span> + <span class="keyword">this</span>.message); </span></span><br><span class="line">        },</span><br><span class="line"><span class="actionscript">        updated: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'updated 更新完成状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"el     : "</span> + <span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el); </span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); </span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"message: "</span> + <span class="keyword">this</span>.message); </span></span><br><span class="line">        },</span><br><span class="line"><span class="actionscript">        beforeDestroy: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'beforeDestroy 销毁前状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"el     : "</span> + <span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);    </span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); </span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"message: "</span> + <span class="keyword">this</span>.message); </span></span><br><span class="line">        },</span><br><span class="line"><span class="actionscript">        destroyed: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.group(<span class="string">'destroyed 销毁完成状态===============》'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"el     : "</span> + <span class="keyword">this</span>.$el);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="keyword">this</span>.$el);  </span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"data   : "</span> + <span class="keyword">this</span>.$data); </span></span><br><span class="line"><span class="javascript">               <span class="built_in">console</span>.log(<span class="string">"%c%s"</span>, <span class="string">"color:red"</span>,<span class="string">"message: "</span> + <span class="keyword">this</span>.message)</span></span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line"><span class="tag"><!--<span class="name"-->script</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->body</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->html</span>></span><br></pre></td></tr></tbody></table></figure></div><p><a href="https://img-blog.csdnimg.cn/20190413135441811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img-blog.csdnimg.cn/20190413135441811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><p><strong>beforeCreated</strong>： 此时 el 和 data 都没开始加载</p><p><strong>created</strong>:              el没开始加载，data加载完毕</p><p><strong>beforMount</strong>:        el加载，data加载完毕，但标签内应用数据为成功加载</p><p><strong>mounted</strong>:            全部加载完毕</p><p><strong>beforeUpdate</strong>:      数据发生改变，还没渲染之前，控制台输入信息修改message，beforeUpdate和updated显示同样的message改变后的值和标签内改变后的值</p><p><strong>updated</strong>:            数据发生改变，还没渲染之后，控制台输入信息修改message，beforeUpdate和updated显示同样的message改变后的值和标签内改变后的值</p><p>正常调用时是看不到页面摧毁事件钩子执行的，这时手动输入</p><p><code>app.$destroy();</code></p><p><strong>beforeDestroyed</strong>:  摧毁事件中值和mouted钩子里的el data 值一样，但是进行页面摧毁后再次改变页面值，页面不会再次响应 </p><p><strong>destroyed</strong>:      摧毁事件中值和mouted钩子里的el data 值一样，但是进行页面摧毁后再次改变页面值，页面不会再次响应 ，原来dom结构保留。 </p><p>keep-alive 独有的生命周期</p><p>vue2.0提供了一个keep-alive组件用来缓存组件,避免多次加载相应的组件,减少性能消耗</p><p> activated配合keep-alive才可实现从其他页面跳转到某个页面时会请求数据，当从下级页面返回这个页面时不会重新请求数据</p><p>activated: <keep-alive>组件被激活调用。</keep-alive></p><p>deactivated:<keep-alive>组件被移除时调用。</keep-alive></p><p>用 keep-alive 包裹的组件在切换时不会进行销毁，而是缓存到内存中并执行 deactivated 钩子函数，命中缓存渲染后会执行 actived 钩子函数。</p><p>思否里大佬总结的具体使用总结，蛮实用的，记一下：</p><p><strong>beforecreate :</strong> 可以在这加个loading事件<br><strong>created ：</strong>在这结束loading，还做一些初始化，实现函数自执行<br><strong>mounted ：</strong> 在这发起后端请求，拿回数据，配合路由钩子做一些事情<br><strong>beforeDestroy</strong>： 你确认删除XX吗？移除事件、定时器，防止内存泄漏以及各种组件销毁操作</p><p><strong>destroyed</strong> ：当前组件已被删除，清空相关内容后会调用改钩子函数。</p><p>补图:</p><p><a href="https://img-blog.csdnimg.cn/20190413155348444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img-blog.csdnimg.cn/20190413155348444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" class="lazyload"></a></p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;vue知识点-一）——-生命周期和钩子函数&quot;&gt;&lt;a href=&quot;#vue知识点-一）——-生命周期和钩子函数&quot; class=&quot;headerlink&quot; title=&quot;vue知识点(一）—— 生命周期和钩子函数&quot;&gt;&lt;/
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>js闭包</title>
    <link href="http://yoursite.com/2020/02/19/js%E9%97%AD%E5%8C%85/"/>
    <id>http://yoursite.com/2020/02/19/js%E9%97%AD%E5%8C%85/</id>
    <published>2020-02-19T04:07:39.913Z</published>
    <updated>2020-02-19T04:13:20.432Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="js闭包"><a href="#js闭包" class="headerlink" title="js闭包"></a><strong>js闭包</strong></h2><p>提起闭包，不得不提起js的特殊作用域。</p><p>函数内部可以直接访问函数外部的变量，但是函数外部不可以访问函数内部的值。</p><p>为了解决这个问题，提出了闭包。</p><p>js有特殊链式结构，虽然函数外部不可以访问函数内部的值，但如果我们在函数内嵌套一个函数呢，函数里的之对嵌套函数是完全可见的，此时利用嵌套函数访问函数值并返回，就可以拿到函数内部的值了。如图：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>{</span><br><span class="line">   <span class="keyword">var</span> num1 = <span class="number">1</span>;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>{</span><br><span class="line">     <span class="built_in">console</span>.log(num1);</span><br><span class="line">   }</span><br><span class="line">   <span class="keyword">return</span> f2;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> fn = f1();</span><br><span class="line">fn();    <span class="comment">//1</span></span><br></pre></td></tr></tbody></table></figure></div><p>事实上，f2就是闭包</p><p>闭包：能够读取其他函数内部变量的函数，只要函数没有释放，整条作用域链都会保留，函数内部和外部的桥梁。</p><p><strong>闭包用途：</strong></p><p><em>1.读取其他函数内部变量</em></p><p><em>2.保存变量值</em></p><p>在js中，局部变量在调用完成后会在调用结束时被垃圾回收机制回收</p><p>在闭包实现中，实际上把f2赋值给了一个全局变量fn,而全局变量不会在调用结束时被垃圾回收机制回收，而f1是f2的父函数，f2的实现与f1有关，所以f2整体作用域链都不会被回收。变量num1会一直保留值。</p><p><strong>闭包缺点</strong></p><p><em>1.内存泄漏</em></p><p>闭包让函数变量保存在内存中，消耗大量内存，如果滥用闭包，可能引起内存泄漏。在退出函数前要记得删除多余变量。</p><p><em>2.数据安全隐患</em></p><p>如果在父函数中，定义全局变量，并将可以改变父函数内部变量的匿名方法赋值给全局变量，那么在父函数外部也可以改变父函数里面的值，存在数据安全隐患。</p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;js闭包&quot;&gt;&lt;a href=&quot;#js闭包&quot; class=&quot;headerlink&quot; title=&quot;js闭包&quot;&gt;&lt;/a&gt;&lt;strong&gt;js闭包&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;提起闭包，不得不提起js的特殊作用域。&lt;
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
    
      <category term="js语法" scheme="http://yoursite.com/tags/js%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>css,js实现跑马灯效果</title>
    <link href="http://yoursite.com/2020/02/19/css,js%E5%AE%9E%E7%8E%B0%E8%B7%91%E9%A9%AC%E7%81%AF%E6%95%88%E6%9E%9C/"/>
    <id>http://yoursite.com/2020/02/19/css,js%E5%AE%9E%E7%8E%B0%E8%B7%91%E9%A9%AC%E7%81%AF%E6%95%88%E6%9E%9C/</id>
    <published>2020-02-19T04:07:31.449Z</published>
    <updated>2020-02-19T04:12:42.696Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="css-js实现跑马灯效果"><a href="#css-js实现跑马灯效果" class="headerlink" title="css,js实现跑马灯效果"></a>css,js实现跑马灯效果</h2><p><strong>一、二维跑马灯</strong></p><p>1.css实现跑马灯效果</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">html</span>></span><br><span class="line"><span class="tag"><<span class="name">html</span>></span></span><br><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line"><span class="tag"><<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">title</span>></span><span class="tag"><!--<span class="name"-->title</span>></span><br><span class="line"><span class="tag"><<span class="name">style</span>></span></span><br><span class="line">body {</span><br><span class="line">display: flex;</span><br><span class="line">flex-direction: row;</span><br><span class="line">justify-content: center;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-id">#wrapper</span> {</span></span><br><span class="line">position: relative;</span><br><span class="line">overflow: hidden;</span><br><span class="line">width: 25%;</span><br><span class="line">height: 100px;</span><br><span class="line">font-size: 20px;</span><br><span class="line"><span class="css"><span class="selector-tag">border</span>: <span class="selector-tag">solid</span> 1<span class="selector-tag">px</span> <span class="selector-id">#000000</span>;</span></span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-id">#horse</span> {</span></span><br><span class="line">position: absolute;</span><br><span class="line">width: 100%;</span><br><span class="line">-webkit-animation: horse 3s linear 0s infinite;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="keyword">@-webkit-keyframes</span> horse {</span></span><br><span class="line">0% {</span><br><span class="line">left: 0%;</span><br><span class="line">top: 0px;</span><br><span class="line">background-color: lavenderblush;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">47% {</span><br><span class="line">left: 105%;</span><br><span class="line">top: 0px;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">48% {</span><br><span class="line">left: 105%;</span><br><span class="line">top: 100px;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">49% {</span><br><span class="line">left: -105%;</span><br><span class="line">top: 100px;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">50% {</span><br><span class="line">left: -100%;</span><br><span class="line">top: 0px;</span><br><span class="line">background-color: lightpink;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">100% {</span><br><span class="line">left: 0%;</span><br><span class="line">top: 0px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#FFB6C1</span>;</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="tag"><!--<span class="name"-->style</span>></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span> <span class="tag"><!--<span class="name"-->script</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->head</span>></span><br><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrapper"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"horse"</span>></span> <span class="tag"><<span class="name">span</span>></span> CSS3 <span class="tag"><!--<span class="name"-->span</span>></span> <span class="tag"><<span class="name">span</span>></span> 实现的跑马灯效果 <span class="tag"><!--<span class="name"-->div</span>> <span class="tag"><!--<span class="name"-->span</span>><br><span class="line"><span class="tag"><!--<span class="name"-->div</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->body</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->html</span>></span><br></pre></td></tr></tbody></table></figure></div><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">html</span>></span><br><span class="line"><span class="tag"><<span class="name">html</span>></span></span><br><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line"><span class="tag"><<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">title</span>></span><span class="tag"><!--<span class="name"-->title</span>></span><br><span class="line"><span class="tag"><<span class="name">style</span>></span></span><br><span class="line">body {</span><br><span class="line">display: flex;</span><br><span class="line">flex-direction: row;</span><br><span class="line">justify-content: center;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-id">#wrapper</span> {</span></span><br><span class="line">position: relative;</span><br><span class="line">overflow: hidden;</span><br><span class="line">width: 25%;</span><br><span class="line">height: 100px;</span><br><span class="line">font-size: 20px;</span><br><span class="line"><span class="css"><span class="selector-tag">border</span>: <span class="selector-tag">solid</span> 1<span class="selector-tag">px</span> <span class="selector-id">#000000</span>;</span></span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-id">#horse</span> {</span></span><br><span class="line">position: absolute;</span><br><span class="line">width: 100%;</span><br><span class="line">-webkit-animation: horse 3s linear 0s infinite;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="keyword">@-webkit-keyframes</span> horse {</span></span><br><span class="line">0% {</span><br><span class="line">left: 0%;</span><br><span class="line">top: 0px;</span><br><span class="line">background-color: lavenderblush;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">47% {</span><br><span class="line">left: 105%;</span><br><span class="line">top: 0px;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">48% {</span><br><span class="line">left: 105%;</span><br><span class="line">top: 100px;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">49% {</span><br><span class="line">left: -105%;</span><br><span class="line">top: 100px;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">50% {</span><br><span class="line">left: -100%;</span><br><span class="line">top: 0px;</span><br><span class="line">background-color: lightpink;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">100% {</span><br><span class="line">left: 0%;</span><br><span class="line">top: 0px;</span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span>: <span class="selector-id">#FFB6C1</span>;</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="tag"><!--<span class="name"-->style</span>></span><br><span class="line"><span class="tag"><<span class="name">script</span>></span> <span class="tag"><!--<span class="name"-->script</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->head</span>></span><br><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrapper"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"horse"</span>></span> <span class="tag"><<span class="name">span</span>></span> CSS3 <span class="tag"><!--<span class="name"-->span</span>></span> <span class="tag"><<span class="name">span</span>></span> 实现的跑马灯效果 <span class="tag"><!--<span class="name"-->div</span>> <span class="tag"><!--<span class="name"-->span</span>><br><span class="line"><span class="tag"><!--<span class="name"-->div</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->body</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->html</span>></span><br></pre></td></tr></tbody></table></figure></div><p><strong>2.js实现跑马灯效果</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><script type="<span" class="string">"text/javascript"</span>></span><br><span class="line">   <span class="keyword">var</span> speed = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ScrollBegin= <span class="built_in">document</span>.getElementById(<span class="string">"scroll_begin"</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">var</span> ScrollEnd = <span class="built_in">document</span>.getElementById(<span class="string">"scroll_end"</span>);</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">var</span> ScrollBeginDiv = <span class="built_in">document</span>.getElementById(<span class="string">"scroll_div"</span>);</span><br><span class="line">   ScrollEnd.innerHTML  = ScrollBegin.innerHTML;</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Marquee</span>(<span class="params"></span>) </span>{</span><br><span class="line">           <span class="keyword">if</span> (ScrollEnd.offsetWidth - ScrollBeginDiv .scrollLeft <= <span class="number">0</span>){</span><br><span class="line">                  ScrollBeginDiv .scrollLeft -= ScrollBegin.offsetWidth;</span><br><span class="line">       }</span><br><span class="line">       <span class="keyword">else</span> {</span><br><span class="line">           ScrollBeginDiv .scrollLeft++;</span><br><span class="line">       }</span><br><span class="line">           }</span><br><span class="line">   <span class="keyword">var</span> MyMar = setInterval(Marquee, speed);</span><br><span class="line">   <<span class="regexp">/script></span></span><br></pre></td></tr></tbody></table></figure></div><p>​     </p><p>​<br>​     </p><p><strong>3.jq实现跑马灯效果</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>{</span><br><span class="line"> </span><br><span class="line"> $.fn.extend({</span><br><span class="line"> <span class="string">"slideUp"</span>:<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>{ </span><br><span class="line">  <span class="keyword">var</span> docthis = <span class="keyword">this</span>;</span><br><span class="line">  <span class="comment">//默认参数</span></span><br><span class="line">  value=$.extend({</span><br><span class="line">   <span class="string">"li_h"</span>:<span class="string">"30"</span>,</span><br><span class="line">   <span class="string">"time"</span>:<span class="number">2000</span>,</span><br><span class="line">   <span class="string">"movetime"</span>:<span class="number">1000</span></span><br><span class="line">  },value) </span><br><span class="line">  <span class="comment">//向上滑动动画</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">autoani</span>(<span class="params"></span>)</span>{</span><br><span class="line">  $(<span class="string">"li:first"</span>,docthis).animate({<span class="string">"margin-top"</span>:-value.li_h},value.movetime,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">   $(<span class="keyword">this</span>).css(<span class="string">"margin-top"</span>,<span class="number">0</span>).appendTo(<span class="string">".line"</span>);</span><br><span class="line">  })</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">//自动间隔时间向上滑动</span></span><br><span class="line">  <span class="keyword">var</span> anifun = setInterval(autoani,value.time);</span><br><span class="line">   </span><br><span class="line">  <span class="comment">//悬停时停止滑动，离开时继续执行</span></span><br><span class="line">  $(docthis).hover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  clearInterval(anifun);  <span class="comment">//清除自动滑动动画</span></span><br><span class="line">  },<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  setInterval(autoani,value.time); <span class="comment">//继续执行动画</span></span><br><span class="line">  })</span><br><span class="line"> } </span><br><span class="line"> })</span><br><span class="line">})(jQuery)</span><br></pre></td></tr></tbody></table></figure></div><p><strong>二、三维跑马灯</strong></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">       <span class="meta"><!DOCTYPE <span class="meta-keyword">html</span>></span></span><br><span class="line"><span class="tag"><<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">title</span>></span>3D旋转<span class="tag"></<span class="name">title</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">'jquery-3.0.0.min.js'</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">style</span>></span></span><br><span class="line">        * {</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> {</span></span><br><span class="line"><span class="css">            <span class="comment">/*指定观察者与平面的距离，使有透视效果*/</span></span></span><br><span class="line"><span class="css">            <span class="comment">/*若无法正常3d效果，将perspective属性提到更上一个父容器即可(此处已上提，从items-->container)*/</span></span></span><br><span class="line">            perspective: 1000px;</span><br><span class="line"><span class="css">            <span class="comment">/*让container的伪类有过渡效果--51-54行*/</span></span></span><br><span class="line"><span class="css">            <span class="comment">/*transition: all 1s;*/</span></span></span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.items</span> {</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#c18</span>;</span></span><br><span class="line">            margin: 200px auto;</span><br><span class="line"><span class="css">            <span class="comment">/*指定子元素定位在三维空间内*/</span></span></span><br><span class="line">            transform-style: preserve-3d;</span><br><span class="line"><span class="css">            <span class="comment">/*让所有item的父级元素（即items）旋转，item就是围绕着旋转了*/</span></span></span><br><span class="line">            animation: autoMove 10s infinite linear;</span><br><span class="line">}</span><br><span class="line"><span class="css">        <span class="selector-class">.item</span> {</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line"><span class="css">            <span class="selector-tag">opacity</span>: <span class="selector-class">.6</span>;</span></span><br><span class="line">            font-size: 200px;</span><br><span class="line">            line-height: 200px;</span><br><span class="line">            text-align: center;</span><br><span class="line">            position: absolute;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="comment">/*定义自动旋转的动画*/</span></span></span><br><span class="line"><span class="css">        <span class="keyword">@keyframes</span> autoMove {</span></span><br><span class="line"><span class="css">            <span class="selector-tag">from</span> { }</span></span><br><span class="line">            to {</span><br><span class="line">                transform: rotateY(-360deg);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.items</span><span class="selector-pseudo">:hover</span> {</span></span><br><span class="line"><span class="css">            <span class="comment">/*鼠标移入 暂停动画*/</span></span></span><br><span class="line">            animation-play-state: paused;</span><br><span class="line">        }</span><br><span class="line"><span class="css">        <span class="selector-class">.container</span><span class="selector-pseudo">:hover</span> {</span></span><br><span class="line"><span class="css">            <span class="comment">/*鼠标移入，绕Z轴旋转90deg*/</span></span></span><br><span class="line"><span class="css">            <span class="comment">/*transform: rotateZ(90deg);*/</span></span></span><br><span class="line">        }</span><br><span class="line">    <span class="tag"></<span class="name">style</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="javascript">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> itemNum = $(<span class="string">".container .items .item"</span>).length;<span class="comment">//要旋转的div的数量</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> itemDeg = <span class="number">360</span> / itemNum;<span class="comment">//计算平均偏移角度，后面的itemDeg*index是不同索引div的偏移角度</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">".items>.item"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index, element</span>) </span>{</span></span><br><span class="line"><span class="javascript">                $(element).css({</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//给每一个item设置好位置</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//rotateY让每一个item绕着Y轴偏移，itemDeg*index是不同索引div的偏移角度</span></span></span><br><span class="line"><span class="actionscript">                    <span class="comment">//translateZ是控制item在角度偏移后，往他们的正上方移动的距离，数值越大旋转的范围越大</span></span></span><br><span class="line"><span class="actionscript">                    transform: <span class="string">"rotateY("</span> + itemDeg * index + <span class="string">"deg) translateZ(280px)"</span></span></span><br><span class="line">                });</span><br><span class="line">            });</span><br><span class="line">        });</span><br><span class="line">    <span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"></<span class="name">head</span>></span></span><br><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"items"</span>></span></span><br><span class="line">            <span class="comment"><!--简便起见，用背景色和数字代替图片--></span></span><br><span class="line">            <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>></span>1<span class="tag"></<span class="name">div</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>></span>2<span class="tag"></<span class="name">div</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>></span>3<span class="tag"></<span class="name">div</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>></span>4<span class="tag"></<span class="name">div</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>></span>5<span class="tag"></<span class="name">div</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item"</span>></span>6<span class="tag"></<span class="name">div</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">div</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">div</span>></span></span><br><span class="line"><span class="tag"></<span class="name">body</span>></span></span><br><span class="line"><span class="tag"></<span class="name">html</span>></span></span><br></pre></td></tr></tbody></table></figure></div></body></html></script></span></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;css-js实现跑马灯效果&quot;&gt;&lt;a href=&quot;#css-js实现跑马灯效果&quot; class=&quot;headerlink&quot; title=&quot;css,js实现跑马灯效果&quot;&gt;&lt;/a&gt;css,js实现跑马灯效果&lt;/h2&gt;&lt;p&gt;&lt;
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
    
      <category term="js语法" scheme="http://yoursite.com/tags/js%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>h5 和 vue uni-app使用echarts</title>
    <link href="http://yoursite.com/2020/02/19/h5%20%E5%92%8C%20vue%20uni-app%E4%BD%BF%E7%94%A8echarts/"/>
    <id>http://yoursite.com/2020/02/19/h5%20%E5%92%8C%20vue%20uni-app%E4%BD%BF%E7%94%A8echarts/</id>
    <published>2020-02-19T04:07:31.418Z</published>
    <updated>2020-02-19T04:12:52.806Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="h5-和-vue-uni-app使用echarts"><a href="#h5-和-vue-uni-app使用echarts" class="headerlink" title="h5 和 vue uni-app使用echarts"></a>h5 和 vue uni-app使用echarts</h2><p>uni-app 是一个使用 Vue.js 开发跨平台应用的前端框架，开发者编写一套代码，可编译到iOS、Android、H5、小程序等多个平台。十分有潜力，但框架使用需要注意的地方也很多</p><p><strong>1.h5使用echarts(或者highcharts)</strong></p><p>一般图表应用常见的有echarts,highcharts,在h5使用echarts时，直接跟官网一样：</p><p>A.下载并引入echarts库             下载地址：<a href="https://echarts.baidu.com/download.html" target="_blank" rel="noopener">https://echarts.baidu.com/download.html</a>  </p><p>引入：</p><script src="echarts.min.js"></script><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">html</span>></span><br><span class="line"><span class="tag"><<span class="name">html</span>></span></span><br><span class="line"><span class="tag"><<span class="name">head</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">title</span>></span>ECharts<span class="tag"><!--<span class="name"-->title</span>></span><br><span class="line">    <span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"echarts.min.js"</span>></span><span class="tag"><!--<span class="name"-->script</span>></span> //引入<br><span class="line"><span class="tag"><!--<span class="name"-->head</span>></span><br><span class="line"><span class="tag"><<span class="name">body</span>></span></span><br><span class="line">  </span><br><span class="line">    <span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span> <span class="attr">style</span>=<span class="string">"width:100%;height:400px;"</span>></span><span class="tag"><!--<span class="name"-->div</span>></span><br><span class="line">    <span class="tag"><<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>></span></span><br><span class="line">        </span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'main'</span>));</span></span><br><span class="line"><span class="actionscript">                     <span class="comment">// 通过 echarts.init 方法初始化一个 echarts 实例</span></span></span><br><span class="line">       </span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> option = {</span></span><br><span class="line"><span class="actionscript">               <span class="comment">// option指定图表的配置项和数据    </span></span></span><br><span class="line">    xAxis: {</span><br><span class="line"><span class="actionscript">        type: <span class="string">'category'</span>,</span></span><br><span class="line"><span class="actionscript">        data: [<span class="string">'Mon'</span>, <span class="string">'Tue'</span>, <span class="string">'Wed'</span>, <span class="string">'Thu'</span>, <span class="string">'Fri'</span>, <span class="string">'Sat'</span>, <span class="string">'Sun'</span>]</span></span><br><span class="line">    },</span><br><span class="line">    yAxis: {</span><br><span class="line"><span class="actionscript">        type: <span class="string">'value'</span></span></span><br><span class="line">    },</span><br><span class="line">    series: [{</span><br><span class="line">        data: [820, 932, 901, 934, 1290, 1330, 1320],</span><br><span class="line"><span class="actionscript">        type: <span class="string">'line'</span></span></span><br><span class="line">    }]</span><br><span class="line"> </span><br><span class="line">        };</span><br><span class="line"> </span><br><span class="line"><span class="actionscript">        <span class="comment">//通过 setOption 方法生成一个简单的折线图</span></span></span><br><span class="line">        myChart.setOption(option);</span><br><span class="line">    <span class="tag"><!--<span class="name"-->script</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->body</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->html</span>></span><br></pre></td></tr></tbody></table></figure></div><p>更多使用直接复制官网实例替换代码中option,千万不要忘记使用setOption 方法调用。</p><p><strong>2.uni-app使用echarts</strong></p><p>A.下载echarts 库</p><p>B.<a href="https://echarts.baidu.com/download.html" target="_blank" rel="noopener">https://echarts.baidu.com/download.html</a>    下载echarts 库</p><p>uni-app是可以使用命令行进行包的导入的，</p><p>当然  首先要安装配置node环境和安装npm 或者 cnpm</p><p>首先，cd到相应的文件夹目录</p><p>在命令行输入</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install echarts mpvue-echarts --save</span><br></pre></td></tr></tbody></table></figure></div><p>或者</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install echarts mpvue-echarts --save</span><br></pre></td></tr></tbody></table></figure></div><p>会出现3个文件</p><p><a href="https://img-blog.csdnimg.cn/20190411142354741.png" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img-blog.csdnimg.cn/20190411142354741.png" class="lazyload"></a></p><p>接下来将文件导入想要使用echarts的文件中</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">       <span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">'../../node_modules/echarts'</span>;</span><br><span class="line"><span class="keyword">import</span> mpvueEcharts <span class="keyword">from</span> <span class="string">'../../node_modules/mpvue-echarts/src/echarts.vue'</span>;</span><br></pre></td></tr></tbody></table></figure></div><p>现在使用echarts实现一个饼图，带lenged(官方实例echarts使用简单版，没有length标签，需改为命令行导入文件夹使用）</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">html</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">template</span>></span></span><br><span class="line"><span class="tag"><<span class="name">view</span> <span class="attr">class</span>=<span class="string">"container"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">view</span>></span></span><br><span class="line"><span class="tag"><<span class="name">view</span> <span class="attr">class</span>=<span class="string">"canvasView"</span>></span></span><br><span class="line"> </span><br><span class="line"><span class="tag"><<span class="name">mpvue-echarts</span> <span class="attr">:echarts</span>=<span class="string">"echarts"</span> <span class="attr">:onInit</span>=<span class="string">"lineInit"</span> <span class="attr">canvasId</span>=<span class="string">"line"</span> <span class="attr">ref</span>=<span class="string">"lineChart"</span> /></span></span><br><span class="line"><span class="tag"><!--<span class="name"-->view</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->view</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->view</span>></span><br><span class="line"><span class="tag"><!--<span class="name"-->template</span>></span><br><span class="line"> </span><br><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">'../../node_modules/echarts'</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> mpvueEcharts <span class="keyword">from</span> <span class="string">'../../node_modules/mpvue-echarts/src/echarts.vue'</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line">data() {</span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> {</span></span><br><span class="line">echarts: echarts,</span><br><span class="line"><span class="actionscript">m: <span class="string">''</span></span></span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">methods: {</span><br><span class="line"> </span><br><span class="line">lineInit(canvas, width, height) {</span><br><span class="line"> </span><br><span class="line"><span class="javascript"><span class="keyword">let</span> lineOption = {</span></span><br><span class="line"><span class="actionscript">animation: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">backgroundColor: <span class="string">'#0A98D5'</span>,</span></span><br><span class="line"><span class="actionscript">color: [<span class="string">'#FFB6C1'</span>, <span class="string">'#32C5E9'</span>, <span class="string">'#67E0E3'</span>, <span class="string">'#91F2DE'</span>],</span></span><br><span class="line">series: [{</span><br><span class="line">label: {</span><br><span class="line">normal: {</span><br><span class="line">fontSize: 14</span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line"><span class="actionscript">type: <span class="string">'pie'</span>,</span></span><br><span class="line"><span class="actionscript">center: [<span class="string">'50%'</span>, <span class="string">'50%'</span>],</span></span><br><span class="line"><span class="actionscript">radius: [<span class="number">0</span>, <span class="string">'60%'</span>],</span></span><br><span class="line">data: [{</span><br><span class="line">value: 1,</span><br><span class="line"><span class="actionscript">name: <span class="string">'电流报警'</span></span></span><br><span class="line">},</span><br><span class="line">{</span><br><span class="line">value: 2,</span><br><span class="line"><span class="actionscript">name: <span class="string">'漏电报警'</span></span></span><br><span class="line">},</span><br><span class="line">{</span><br><span class="line">value: 3,</span><br><span class="line"><span class="actionscript">name: <span class="string">'温度报警'</span></span></span><br><span class="line">},</span><br><span class="line">{</span><br><span class="line">value: 4,</span><br><span class="line"><span class="actionscript">name: <span class="string">'电压报警'</span></span></span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">],</span><br><span class="line">itemStyle: {</span><br><span class="line">emphasis: {</span><br><span class="line">shadowBlur: 10,</span><br><span class="line">shadowOffsetX: 0,</span><br><span class="line"><span class="actionscript">shadowColor: <span class="string">'rgba(0, 2, 2, 0.3)'</span></span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}]</span><br><span class="line">};</span><br><span class="line"><span class="javascript"><span class="keyword">let</span> lineChart = echarts.init(canvas, <span class="literal">null</span>, {</span></span><br><span class="line">width: width,</span><br><span class="line">height: height</span><br><span class="line">})</span><br><span class="line">canvas.setChart(lineChart)</span><br><span class="line"> </span><br><span class="line">lineChart.setOption(lineOption)</span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> lineChart</span></span><br><span class="line"> </span><br><span class="line">}</span><br><span class="line">},</span><br><span class="line">components: {</span><br><span class="line">mpvueEcharts</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="tag"><!--<span class="name"-->script</span>></span><br><span class="line"><span class="tag"><<span class="name">style</span>></span></span><br><span class="line">page,</span><br><span class="line">view {</span><br><span class="line">display: flex;</span><br><span class="line"><span class="css"><span class="comment">/* uni-app默认使用flex布局。因为flex布局有利于跨更多平台，尤其是采用原生渲染的平台。如不了解flex布局，请参考http://www.w3.org/TR/css3-flexbox/。若不需要flex布局可删除本行*/</span></span></span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line">page {</span><br><span class="line">min-height: 100%;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.page-section-title</span> {</span></span><br><span class="line">padding: 0 30upx;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.title</span> {</span></span><br><span class="line">margin-left: 30upx;</span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-id">#8f8f94</span>;</span></span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.container</span> {</span></span><br><span class="line">padding-bottom: 30upx;</span><br><span class="line">box-sizing: border-box;</span><br><span class="line">display: flex;</span><br><span class="line">flex-direction: column;</span><br><span class="line">width: 100%;</span><br><span class="line"> </span><br><span class="line">}</span><br><span class="line"><span class="css">    <span class="selector-class">.canvasView</span> {</span></span><br><span class="line">        height: 600upx;</span><br><span class="line">width: 100%;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.navigate</span> {</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span>: <span class="selector-id">#007AFF</span>;</span></span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.canvas-bar</span> {</span></span><br><span class="line">display: flex;</span><br><span class="line">flex-direction: row;</span><br><span class="line">justify-content: space-between;</span><br><span class="line">}</span><br><span class="line"> </span><br><span class="line"><span class="css"><span class="selector-class">.update-btn</span> {</span></span><br><span class="line">margin-right: 30upx;</span><br><span class="line">}</span><br><span class="line"><span class="tag"><!--<span class="name"-->style</span>></span><br></pre></td></tr></tbody></table></figure></div><p>至此，大功告成。</p></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;h5-和-vue-uni-app使用echarts&quot;&gt;&lt;a href=&quot;#h5-和-vue-uni-app使用echarts&quot; class=&quot;headerlink&quot; title=&quot;h5 和 vue uni-app使
      
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/categories/vue/"/>
    
    
      <category term="html5" scheme="http://yoursite.com/tags/html5/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
      <category term="uniapp" scheme="http://yoursite.com/tags/uniapp/"/>
    
      <category term="echarts" scheme="http://yoursite.com/tags/echarts/"/>
    
  </entry>
  
  <entry>
    <title>关于js中的parseInt(),Number(),toString()用法</title>
    <link href="http://yoursite.com/2020/02/19/%E5%85%B3%E4%BA%8Ejs%E4%B8%AD%E7%9A%84parseInt(),Number(),toString()%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2020/02/19/%E5%85%B3%E4%BA%8Ejs%E4%B8%AD%E7%9A%84parseInt(),Number(),toString()%E7%94%A8%E6%B3%95/</id>
    <published>2020-02-19T04:07:31.134Z</published>
    <updated>2020-02-19T04:12:18.250Z</updated>
    
    <content type="html"><![CDATA[<html><head></head><body><h2 id="关于js中的parseInt-Number-toString-用法"><a href="#关于js中的parseInt-Number-toString-用法" class="headerlink" title="关于js中的parseInt(),Number(),toString()用法"></a>关于js中的parseInt(),Number(),toString()用法</h2><p>​       这次，有朋友提出了一个问题，为什么parseInt(“a”,b)中a必须小于b，由于这个函数我不太常用，所以刚拿到这个问题我的第一反应是这应该是把a转化为b进制吧，怎么还有大小限制，如果这样，那么a必须小于b这个函数就没有存在的必要了，</p><p>​    经过知识了解。感觉js中进制转化是容易搞懂又容易再次混淆的问题。</p><p>​     <strong>parseInt(“a”,b)是将“a”字符串(如果第一个值不为字符串就先转变为字符串）转化为数字，然后将b进制的数字a转化为10进制数值并返回结果。</strong></p><p><a href="https://img-blog.csdnimg.cn/20190410201943844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img-blog.csdnimg.cn/20190410201943844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><p>其他使用方法：</p><p>1.基本用法（只接受一个参数，可以当做第二个参数默认是10）</p><pre><code>parseInt的返回值只有两种可能，不是一个十进制整数，就是NaN。</code></pre><p>a.将字符串转为整数。parseInt(‘123’) // 123</p><p>b.如果字符串头部有空格，空格会被自动去除。parseInt(‘   81’) // 81</p><p>c.如果parseInt的参数不是字符串，则会先转为字符串再转换。</p><p>d.字符串转为整数的时候，是一个个字符依次转换，如果遇到不能转为数字的字符，就不再进行下去，返回已经转好的部分。</p><p>e.如果字符串的第一个字符不能转化为数字（后面跟着数字的正负号除外），返回NaN。</p><p>f.如果字符串以0x或0X开头，parseInt会将其按照十六进制数解析。parseInt(‘0x10’) // 16</p><p>g.如果字符串以0开头，将其按照10进制解析。parseInt(‘011’) // 11</p><p>h.如果参数以0开头，但不是字符串，则会先将数值转成字符串，然后解析，见规则c  parseInt(011) // 9</p><p>i.对于那些会自动转为科学计数法的数字，parseInt会将科学计数法的表示方法视为字符串，因此导致一些奇怪的结果。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">parseInt(1000000000000000000000.5) // 1</span><br><span class="line">// 等同于</span><br><span class="line">parseInt('1e+21') // 1</span><br><span class="line"></span><br><span class="line">parseInt(0.0000008) // 8</span><br><span class="line">// 等同于</span><br><span class="line">parseInt('8e-7') // 8</span><br></pre></td></tr></tbody></table></figure></div><p>​      <strong>Number()这个函数其实是将括号中内容尝试转变为number类型数值的，与进制转化没有任何关系。</strong></p><p><a href="https://img-blog.csdnimg.cn/2019041020193378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" data-fancybox="group" data-caption="img" class="fancybox"><img alt="img" title="img" data-src="https://img-blog.csdnimg.cn/2019041020193378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzM2MzQ2,size_16,color_FFFFFF,t_70" class="lazyload"></a></p><p>toString()才是进制转换，将数字转换为2到36之间的进制。</p><p>测试如下：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">javascript</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight javascript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">         <span class="keyword">var</span> a =<span class="built_in">parseInt</span>(<span class="number">7</span>,<span class="number">16</span>);  <span class="comment">//7</span></span><br><span class="line"><span class="keyword">var</span> b =<span class="built_in">parseInt</span>(<span class="string">"17"</span>,<span class="number">8</span>);  <span class="comment">//15</span></span><br><span class="line"><span class="keyword">var</span> c =<span class="built_in">Number</span>(<span class="string">"6"</span>);   <span class="comment">//6</span></span><br><span class="line"><span class="keyword">var</span> x =(<span class="number">18</span>).toString(<span class="number">36</span>);   <span class="comment">//i</span></span><br></pre></td></tr></tbody></table></figure></div><p>此外，看到有博主问这个：</p><p>上面parseInt()竟然其他使用用法d可以解决，第一题，1/0为Infinity，刚好19进制中的字符I为18，而n不认识，此时返回18.</p><p>值得注意的是</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.log(parseInt) ;   // function parseInt(){}</span><br></pre></td></tr></tbody></table></figure></div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;h2 id=&quot;关于js中的parseInt-Number-toString-用法&quot;&gt;&lt;a href=&quot;#关于js中的parseInt-Number-toString-用法&quot; class=&quot;headerlink&quot; title=&quot;关
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
    
      <category term="js语法" scheme="http://yoursite.com/tags/js%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
</feed>
